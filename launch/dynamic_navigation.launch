<launch>
	<!-- Argument for simulation mode -->
    <arg name="simulation" default="true" />
	<param name="autonomous_flight/simulation" type="bool" value="$(arg simulation)" />
	
    <!-- Conditionally remap topics if simulation is true -->
    <group if="$(arg simulation)">
        <remap from="/mavros/local_position/odom" to="CERLAB/quadcopter/odom" />
        <remap from="/mavros/setpoint_raw/local" to="CERLAB/quadcopter/cmd_acc" />
		<rosparam file="$(find tracking_controller)/cfg/controller_param.yaml" ns="controller"/>
		<node pkg="tracking_controller" type="tracking_controller_node" name="tracking_controller_node" output="screen" />
		<!-- <node pkg="tracking_controller" type="tracking_controller_node" name="tracking_controller_node" /> -->

		<rosparam file="$(find autonomous_flight)/cfg/dynamic_navigation/fake_detector_param.yaml" />
		<rosparam file="$(find autonomous_flight)/cfg/dynamic_navigation/flight_base.yaml" ns="autonomous_flight"/>
		<rosparam file="$(find autonomous_flight)/cfg/dynamic_navigation/planner_param.yaml" />
		<!-- <rosparam file="$(find autonomous_flight)/cfg/dynamic_navigation/mapping_param.yaml" ns="/occupancy_map" /> -->
		<rosparam file="$(find autonomous_flight)/cfg/dynamic_navigation/mapping_param.yaml" ns="/dynamic_map" />
		<rosparam file="$(find autonomous_flight)/cfg/dynamic_navigation/dynamic_detector_param.yaml" ns="/onboard_detector" />
		<rosparam file="$(find autonomous_flight)/cfg/dynamic_navigation/predictor_param.yaml" ns="/dynamic_predictor" />

		<node pkg="autonomous_flight" type="dynamic_navigation_node" name="dynamic_navigation_node" output="screen" />
		<node pkg="onboard_detector" type="yolo_detector_node.py" name="yolo_detector_node" output="screen" />
    </group>
	
	<group unless="$(arg simulation)">
		<rosparam file="$(find tracking_controller)/cfg/controller_param.yaml" ns="controller"/>
		<node pkg="tracking_controller" type="tracking_controller_node" name="tracking_controller_node" output="screen" />
		<!-- <node pkg="tracking_controller" type="tracking_controller_node" name="tracking_controller_node" /> -->

		<rosparam file="$(find autonomous_flight)/cfg/dynamic_navigation/fake_detector_param.yaml" />
		<rosparam file="$(find autonomous_flight)/cfg/dynamic_navigation/flight_base.yaml" ns="autonomous_flight"/>
		<rosparam file="$(find autonomous_flight)/cfg/dynamic_navigation/planner_param.yaml" />
		<!-- <rosparam file="$(find autonomous_flight)/cfg/dynamic_navigation/mapping_param.yaml" ns="/occupancy_map" /> -->
		<rosparam file="$(find autonomous_flight)/cfg/dynamic_navigation/mapping_param.yaml" ns="/dynamic_map" />
		<rosparam file="$(find autonomous_flight)/cfg/dynamic_navigation/dynamic_detector_param.yaml" ns="/onboard_detector" />
		<rosparam file="$(find autonomous_flight)/cfg/dynamic_navigation/predictor_param.yaml" ns="/dynamic_predictor" />

		<node pkg="autonomous_flight" type="dynamic_navigation_node" name="dynamic_navigation_node" output="screen" />
		<node pkg="onboard_detector" type="yolo_detector_node.py" name="yolo_detector_node" output="screen" />
    </group>


	
</launch>